# Automatically generated file; DO NOT EDIT.

language: perl

cache:
  directories:
    - ~/perl5

env:
  global:
    - AUTOMATED_TESTING=1
    - PERL_USE_UNSAFE_INC=0

git:
  submodules: false

matrix:
  include:
    - perl: '5.10'
      env: DIST_ZILLA=5.048

    - perl: '5.12'
      env: DIST_ZILLA=5.048

    - perl: '5.14'
      env: DIST_ZILLA=6.012

    - perl: '5.16'
      env: DIST_ZILLA=6.012

    - perl: '5.18'
      env: DIST_ZILLA=6.012

    - perl: '5.18'
      env: DIST_ZILLA=6.012 AUTHOR_TESTING=1
      os: osx

    - perl: '5.20'
      env: DIST_ZILLA=6.012

    - perl: '5.22'
      env: DIST_ZILLA=6.012

    - perl: '5.24'
      env: DIST_ZILLA=6.012 AUTHOR_TESTING=1

    - perl: '5.26'
      env: DIST_ZILLA=6.012

before_install:
  - |
    case "${TRAVIS_OS_NAME}" in
      "linux" )
        ;;
      "osx"   )
        # TravisCI extracts the broken perl archive with sudo which creates the
        # $HOME/perl5 directory with owner root:staff. Subdirectories under
        # perl5 are owned by user travis.
        sudo chown "$USER" "$HOME/perl5"

        # The perl distribution TravisCI extracts on OSX is incomplete
        sudo rm -rf "$HOME/perl5/perlbrew"

        # Install cpanm and local::lib
        curl -L https://cpanmin.us | perl - App::cpanminus local::lib
        eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
        ;;
    esac
  - perl -V
  - perl -e '
      my $ok = 0;
      if ( $ENV{TRAVIS_PERL_VERSION} =~ m{ ^ 5 [.] ([1-9] [0-9]*) $ }xsm ) {
          my $want = sprintf "5.%03i", $1;
          if ( $] =~ m{ ^ \Q$want\E [0-9]{3} $ }xsm ) {
              $ok = 1;
          }
      }
      elsif ( $ENV{TRAVIS_PERL_VERSION} =~ m{ ^ 5 [.] ( [1-9] [0-9]* ) [.] ( [0-9]+ ) $ }xsm ) {
          if ( $] eq sprintf "5.%03i%03i", $1, $2 ) {
              $ok = 1;
          }
      }

      die "We asked for Perl $ENV{TRAVIS_PERL_VERSION} but got $]\n" if $ok == 0;
      print "Perl $ENV{TRAVIS_PERL_VERSION} is requested and $] is installed. Good!\n";
      exit 0;
    '

install:
  - |
    if [ -n "$DIST_ZILLA" ]
    then
        cpanm --verbose --notest --skip-satisfied Dist::Zilla@$DIST_ZILLA
        dzil version
    fi
  - |
    if [ -n "$AUTHOR_TESTING" ]
    then
        cpanm --verbose --installdeps --notest --skip-satisfied --with-develop .
    else
        cpanm --verbose --installdeps --notest --skip-satisfied .
    fi

script:
  - perl Makefile.PL && make test
  - |
    if [ -n "$AUTHOR_TESTING" ]
    then
        prove -lr xt/author
    fi
